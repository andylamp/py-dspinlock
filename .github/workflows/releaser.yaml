name: Publish release to PyPi

on:
  push:
    branches:
      - release

jobs:
  build:
    name: Build distribution packages
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      # Checkout the codebase at the target release
      - name: Checkout the codebase
        uses: actions/checkout@v4
      # Extract the current version of the release
      - name: Extract release version, if found, and assign
        run: |
          app_version=""
          if grep -q VERSION setup.py; then
            app_version=$(grep VERSION setup.py | grep -oP "[\d.]+")
          else
            exit 1
          fi
          echo "Discovered version: ${app_version}"
          version_tag="v${app_version}"
          # update the environment variables
          echo "version_tag=${version_tag}" >> ${GITHUB_ENV}
      # Check if the release tag already exists
      - name: Check if the release tag already exists
        uses: mukunku/tag-exists-action@v1.4.0
        id: checkTag
        with:
          tag: ${{ env.version_tag }}
      # Fail if the tag exists
      - name: Fail if tag exists
        run: |
          [ "${{ steps.checkTag.outputs.exists }}" = "true" ] || { echo "Version does not exist - we can continue" && false; } && exit 1
      # set up the python environment for releasing
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      # Install the pypa/build package, which allows us to actually build the packages
      - name: Install PyPa Build
        run: >-
          python3 -m pip install build --user
      # Build the packages
      - name: Build the binary wheels and a source tarball
        run: >-
          python3 -m build
      # Sign the dists with sigstore
      - name: Sign the distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      # Upload artifact signatures to GitHub Release
      - name: Upload artifact signatures to GitHub Releases
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload '${{ env.version_tag }}' dist/** --repo '${{ github.repository }}'
